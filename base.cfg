/////////////////////////////////////////////////////////////////////////////////////////////////////
// Core's Config - Inspired by Chris' Highframes CFG:                                              //
// using tweaks/comments from Comanglia, Mastercoms, and Sage.                                     //
// February 2018 - Main changes - Tweaked comments, removed more dead commands, added back LO's.   //
// https://github.com/corei17/Cores-CFG                                                            //
//                                                                                                 //
// (WIKI IS A WORK IN PROGRESS)                                                                    //
// Almost all commands and changes will be documented on GitHub, the Wiki has a lot of information //
// on what does what. I'de suggest if you want to edit this config you jump over there before.     //
// https://github.com/corei17/Cores-CFG/wiki                                                       //
/////////////////////////////////////////////////////////////////////////////////////////////////////

sv_cheats 1 // Prevent fog cvar spew in console on startup
con_filter_enable 1 // Filter unknown errors in console log
con_filter_text_out "unknown" //  ^

// FILES
// Controls networked file handling

net_maxfilesize 64 // Max out file upload size for extra content
cl_downloadfilter all // Allow all server custom files
//cl_downloadfilter nosounds // Do not download sound files a server
//cl_downloadfilter mapsonly // Only downloads maps from server custom files
//cl_downloadfilter none // Do not download any files from a server
cl_allowdownload 1 // Download other player custom files
//cl_allowdownload 0 // Block downloads of other player custom files
cl_allowupload 1 // Upload your player custom files
//cl_allowupload 0 // Disable uploading your player custom files

// MATCHMAKING
// Adjusts casual/competitive matchmaking settings

//tf_mm_custom_ping 100 // The ping tolerance for matchmaking
//tf_mm_custom_ping_enabled 1 // Enable custom ping tolerance
tf_mm_debug_level 0 // Remove matchmaking debug output
//tf_mm_partyclient_debug 1 // Enable party debug output
//tf_party_ignore_invites 1 // Ignore party invites
tf_party_join_request_mode 1 // Mode for party join requests: 0 - open join, 1 - request join, 2 - invite join
//tf_party_force_update // Force an update to the party system
//tf_party_keep_on_same_team 0 // Do not enforce parties being on the same team (not implemented)
//tf_datacenter_ping_debug 1 // Turn on debugging for server routing
//tf_datacenter_ping_dump // Dump server routing debug info

// THREADING
// These settings will take advantage of your CPU cores

cl_threaded_client_leaf_system 1 // Asynchronously add new renderables and compute blends for added
                                 // renderables
//cl_threaded_client_leaf_system 0 // Use traditional behavior for CPUs with less than 4 cores
r_threaded_renderables 1 // Asynchronously set up bones on animated entities
//r_threaded_renderables 0 // Use traditional behavior for CPUs with 1 core
r_threaded_particles 1 // Process particle systems in parallel
//r_threaded_particles 0 // Process particle systems one at a time for CPUs with 1 core
r_threaded_client_shadow_manager 1 // Multithreaded shadow computations/rendering
//r_threaded_client_shadow_manager 0 // Use traditional behavior for CPUs with less than 4 cores
mat_queue_mode 2 // Force multithreaded mode for the material system queue
//mat_queue_mode 1 // Force queued single threaded mode for CPUs with less than 4 cores
studio_queue_mode 1 // Use queue calls for studio renders
host_thread_mode 1 // Use the threaded frame behavior if applicable (use 2 to force)

// MATERIAL SYSTEM
// These settings will take advantage of the material system, depending on how mat_queue_mode is set

r_queued_decals 0 // Disabled by default due to crashes
//r_queued_decals 1 // Offload decal draws to the material system
r_queued_post_processing 0 // Disabled by default because it usually fails to render the post processing
                           // effects in time for the frame render, resulting in a missing texture
//r_queued_post_processing 1 // Offloads post processing to the material system
                             // Performance improvement if your driver/GPU works with it
r_queued_ropes 1 // Queue some rope rendering using the material system

// LODs
// Controls the quality of objects based on distance.

//r_rootlod 1 // Limits how high the model LOD can be, does not offload rendering to CPU like many people
            // believe. Set to 1 for the best balance between model quality and performance.
r_rootlod 2 // Maximum performance for models
//r_rootlod 0 // Maximum quality for models
lod_TransitionDist -5000 // Fade map objects over a long distance to reduce pop
                         // in and clutter while still increasing performance
//lod_TransitionDist -1 // Do not fade in map objects for maximum performance
//lod_TransitionDist -5001 // Fade map objects across a shorter distance to slightly reduce pop in while
                           // still increasing performance
//lod_TransitionDist 800 // Start fading map objects only when they are very far away, decreases
                         // performance but has the least pop in
r_lod -1 // Use r_rootlod to properly fade through LODs.
//r_lod 0 // Always use the highest LOD possible
mat_max_worldmesh_vertices 16384 // Use optimized mesh vertices cap
//mat_max_worldmesh_vertices 65536 // Use maximum mesh vertices
//mat_max_worldmesh_vertices 1024 // Reduce mesh vertices to minimum

// LIGHTNING
// Lights projected onto characters and other dynamic models

r_ambientboost 1 // Boosts reflected light, gives you vision advantage,
                 // especially in darker environments
//r_ambientboost 0 // Disable to save the small amount of CPU this uses
r_ambientmin 0.5 // Allow for ambient boosting even in brighter light levels, makes characters stand out
//r_ambientmin 0.3 // Use TF2 default ambient boost threshold
//r_ambientmin 0.1 // Ambient boost less often, realistic darkness
//r_ambientmin 1.1 // Ambient boost every time
r_rimlight 1 // Rimlighting is a distinct design choice in TF2 for better visibility of classes
//r_rimlight 0 // Disable light around character edges, very small FPS increase, rimlight uses GPU only
mat_phong 1 // Use a phong shader for shading/reflection
//mat_phong 0 // Disable phong for flatter shading
r_lightaverage 0 // Disable this lighting job that uses a lot of CPU even if it is not needed/noticeable
//r_lightaverage 1 // Enable time averaging of lighting to reduce popping
r_dynamic 0 // Disable dynamic lighting (muzzle flash lighting, explosions and other lighted effects)
//r_dynamic 1 // Enable dynamic lighting
r_maxdlights 0 // Do not allow any dynamic lights
//r_maxdlights 9 // Reduce maximum dynamic lights
//r_maxdlights 32 // Use the maximum number of dynamic lights
r_worldlightmin 0.004 // Do not render insignificant world lighting
//r_worldlightmin 2 // Reject all world lighting
//r_worldlightmin 0.0002 // Render practically all world lighting
//r_worldlightmin 0 // Render all world lighting, no matter how insignificant it may be
r_worldlights 0 // Disable world lights
//r_worldlights 2 // Reduce maximum lights applied to a vertex
//r_worldlights 4 // Use the maximum amount of world lights
mat_disable_fancy_blending 1 // Disable fancy blending
//mat_disable_fancy_blending 0 // Enable fancy blending
mat_disable_lightwarp 1 // Disable light warps
//mat_disable_lightwarp 0 // Enable light warps

// SHADOWS
// Shadows cast from characters

r_shadows 0 // Disable shadows for a big FPS increase
//r_shadows 1 // Enable shadows
r_shadowrendertotexture 0 // Do not use two materials for shadows (uses memory and rendering time)
//r_shadowrendertotexture 1 // Prettier shadows
cl_blobbyshadows 1 // Render a blob for shadows
//cl_blobbyshadows 0 // Get sharper model shape based shadows
r_flashlightdepthtexture 0 // Disable the CPU intensive depth texturing for shadows
//r_flashlightdepthtexture 1 // Even prettier shadows
r_flashlightdepthres 32 // Reduce the shadow depth texture resolution. Only works when depth textures are
                        // on
//r_flashlightdepthres 4096 // Sharper shadows (alternatively try: 8192, 2048, 1024, 512), higher is
                            // higher quality
r_flashlightrender 0 // Disable flashlight shadow
//r_flashlightrender 1 // Enable flashlight shadow
r_flashlightmodels 0 // Disable lighting models
//r_flashlightmodels 1 // Enable lighting models
r_flashlightscissor 1 // Disable shadow rendering where it is unneeded
//r_flashlightscissor 0 // Fix some shadows being improperly cut off at the cost of performance
nb_shadow_dist 200  // Do not use shadows from far away (NextBot system)
//nb_shadow_dist 0 // Disable shadow distance
//nb_shadow_dist 400 // Default distance for NextBot shadows
r_shadowmaxrendered 17 // Do not render more shadows than needed
//r_shadowmaxrendered 11 // for 6s
//r_shadowmaxrendered 32 // Render all shadows

// EFFECTS
// Weapon and other light effects

cl_ejectbrass 0 // Disable shell ejection from pistols, shotgun, minigun, etc
//cl_ejectbrass 1 // Enable shell ejection
muzzleflash_light 0 // Disable muzzle flash lights
//muzzleflash_light 1 // Enable muzzle flash lights
cl_muzzleflash_dlight_1st 0 // Disable muzzle flash lights in first person
//cl_muzzleflash_dlight_1st 1 // Enable muzzle flash lights in first person
tracer_extra 0 // Remove extra fluff to bullet lines that make them thicker
//tracer_extra 1 // Make bullet lines more visible, low performance impact
r_drawtracers_firstperson 1 // Enable first person tracers, low performance impact
//r_drawtracers_firstperson 0 // Do not draw tracers when you are in first person
cl_show_splashes 1 // Enable water splashes
//cl_show_splashes 0 // Disable water splashes
cl_fasttempentcollision 20 // Check every 20 frames for collisions on syringes, shell ejection, blood,
                           // and some other effects
//cl_fasttempentcollision 5 // Check collisions every 5 frames
//cl_fasttempentcollision 10000 // Skip collision checking
//cl_fasttempentcollision 1 // Check collisions every frame

// WATER
// Water reflections

r_cheapwaterstart 400 // The distance at which transitionary cheap water starts. Has less reflectivity.
//r_cheapwaterstart 0 // Use cheap water as much as possible
//r_cheapwaterstart 3000 // Do not use cheap water
r_cheapwaterend 1000 // The distance at which fully cheap water starts. Does not reflect or refract and
                     // it is solid
//r_cheapwaterend 0.1 // Use cheap water as much as possible
//r_cheapwaterend 5000 // Do not use cheap water
r_WaterDrawReflection 0 // Water reflections disabled for more performance
//r_WaterDrawReflection 1 // Enable water reflections
r_waterforceexpensive 0 // Do not force expensive water
//r_waterforceexpensive 1 /// Force higher quality water
r_waterforcereflectentities 0 // Do not forcing entity water reflections
//r_waterforcereflectentities 1 // Enable entity water reflections
r_WaterDrawRefraction 1 // Enable water refraction as water is hard to look at otherwise
//r_WaterDrawRefraction 0 // Disable water refraction for maximum FPS
r_ForceWaterLeaf 0 // Use the true viewpoint for visibility testing

// PARTICLES
// Particle effects

cl_particle_batch_mode 1 // Use default particle batch mode
tf_particles_disable_weather 1 // Disable rain, snow and ash particles
//tf_particles_disable_weather 0 // Increases number of particle systems on some maps, less FPS
mat_reduceparticles 1 // Reduce number of particles, but it only helps a little bit because the real
                      // performance impact comes from creating particle systems
//mat_reduceparticles 0 // Use the full number of particles
cl_new_impact_effects 0 // Use the old particle system for bullet impact particles
//cl_new_impact_effects 1 // Use the new particle system for bullet impact particles
r_drawflecks 0 // Do not create particle systems when things hit surfaces, increases FPS and reduces
               // distractions
//r_drawflecks 1 // Draw flecks from impacts
r_particle_sim_spike_threshold_ms 0 // Early finish to unused particle performance stats

// POST PROCESSING
// Extra visual effects

mat_postprocessing_combine 1 // Combine post processing effects
mat_hdr_level 0 // LDR
//mat_hdr_level 1 // LDR and bloom
//mat_hdr_level 2 // HDR and bloom
mat_non_hdr_bloom_scalefactor 0 // Completely disable bloom on LDR
//mat_non_hdr_bloom_scalefactor 0.3 // Default bloom scale on LDR
//r_bloomtintexponent 2.2 // Intensity of bloom effect
//mat_bloom_scalefactor_scalar 1 // Intensity of bloom emitters
building_cubemaps 0 // Allow for post processing effects and pixel vis testing
mat_colorcorrection 0 // Disable color correction
//mat_colorcorrection 1 // Enable color correction, pretty much free effect
mat_colcorrection_disableentities 1 // Disable entity color correction
//mat_colcorrection_disableentities 0 // Enable entity color correction
pyro_dof 0 // Skip a SSAO depth pass for pyrovision
//pyro_dof 1 // Enable pyrovision dof
pyro_vignette 0 // Disable vignette for pyrovision
//pyro_vignette 2 // Enable pyrovision vignette
pyro_vignette_distortion 0 // Disable vignette distortion for pyrovision
//pyro_vignette_distortion 1 // Enable pyrovision vignette distortion
pyro_max_intensity 0 // Disable more pyrovision visual effects
pyro_max_rate 0 // ^
pyro_max_side_length 0 // ^
pyro_max_side_width 0 // ^
pyro_min_intensity 0 // ^
pyro_min_rate 0 // ^
pyro_min_side_length 0 // ^
pyro_min_side_width 0 // ^
//pyro_max_intensity 0.5 // Enhance more pyrovision visual effects
//pyro_max_rate 0.5 // ^
//pyro_max_side_length 1 // ^
//pyro_max_side_width 1 // ^
//pyro_min_intensity 0.2 // ^
//pyro_min_rate 0.05 // ^
//pyro_min_side_length 0.65 // ^
//pyro_min_side_width 0.65 // ^

// MOTION BLUR
// These settings will adjust the blurring effect from rotation and movement

mat_motion_blur_enabled 0 // Disable motion blur
//mat_motion_blur_enabled 1 // Enable motion blur
//mat_motion_blur_falling_intensity 1 // Blur intensity while falling
//mat_motion_blur_falling_max 20 // Maximum blur from falling
//mat_motion_blur_falling_min 10 // Minimum blur from falling
//mat_motion_blur_forward_enabled 1 // Enable motion blur from forward motion
//mat_motion_blur_percent_of_screen_max 4 // Maximum percentage of screen that can blur
//mat_motion_blur_rotation_intensity 0.4 // Adjust blur caused by rotational motion
//mat_motion_blur_strength 1 // Adjust overall blur strength

// ANTIALIASING / FILTERING
// These settings will adjust the smoothing of jagged edges and textures

//mat_antialias 1 // Do not do antialiasing (commented due to possible crashes on some systems if this setting is run on launch)
mat_aaquality 0 // Disable CSAA
mat_alphacoverage 0 // Disable alpha-to-coverage, which improves AA on thin overlapping surfaces
//mat_alphacoverage 1 // Enable alpha-to-coverage
mat_software_aa_strength 0 // Do not do software AA
//mat_software_aa_strength 1 // Enable software AA
mat_software_aa_strength_vgui 0 // Do not do software AA on the HUD
//mat_software_aa_strength_vgui 1 // Enable VGUI software AA
mat_trilinear 1 // Use trilinear as it improves texture filtering for little
//mat_trilinear 0 // Use bilinear filtering to squeeze out every last bit of performance
mat_forceaniso 1 // Disable anisotropic filtering
//mat_forceaniso 2 // Levels of anisotropic filtering (2, 4, 8, 16)

// CHARACTERS
// These settings will adjust the characters in the game

r_flex 1 // Enable facial animations. Requires more bones to be setup on CPU
//r_flex 0 // Disable facial animations
flex_rules 1 // Enable facial animations
//flex_rules 0 // Disable facial animations
anim_3wayblend 0 // Disable 3-way animation blending
//anim_3wayblend 1 // Enable 3-way animation blending
ai_expression_optimization 1 // Do an extra visibility check for flex animations
                             // if we are above the target FPS, otherwise disable
                             // flex anims
//ai_expression_optimization 0 // Disable expression optimization
ai_expression_frametime 0.0152 // Disable expressions if we are below ideal FPS
//ai_expression_frametime 0 // Disable expressions entirely
r_teeth 1 // Render teeth
//r_teeth 0 // Do not render teeth, small FPS boost
cl_SetupAllBones 0 // Do not force every animation component of a model to be set up
//cl_SetupAllBones 1 // Always setup all animation bones regardless of rules or disabled settings
flex_smooth 0 // Do not smooth facial animations
//flex_smooth 1 // Smooth facial animations
mp_usehwmmodels -1 // Do not use or load high quality characters
//mp_usehwmmodels 0 // Use high quality characters if supported
mp_usehwmvcds -1 // Do not use or load high quality character facial expressions
//mp_usehwmvcds 0 // Use high quality characters facial expressions if supported
r_glint_procedural 0 // Use the default eye glinting method
//r_glint_procedural 1 // Use CPU eye glinting for weak GPUs
r_eyes 1 // Draw character eyes. Actually a noticeable FPS decrease
//r_eyes 0 // Disable eyes
r_eyemove 1 // Control if character eyes should move, does not really affect performance
//r_eyemove 0 // Disable eye movement
tf_clientsideeye_lookats 1 // Control if character eyes should look at you, does not really affect
                           // performance
//tf_clientsideeye_lookats 0 // Disable eye lookats
blink_duration 0.2 // Duration of an eye blink. Do not set to 0.
//blink_duration 0 // Disable blinking

// DECALS
// Overlay textures on models

r_decals 9 // Allow to check bullet spread (must be the same as mp_decals)
//r_decals 0 // Disable decals
//r_decals 96 // Optimized high decal count
//r_decals 2048 // Maximum decal count
mp_decals 9 // Allow to check bullet spread (must be the same as r_decals)
//mp_decals 0 // Disable decals
//mp_decals 96 // Optimized high decal count
//mp_decals 2048 // Maximum decal count
r_drawbatchdecals 0 // Do not batch decals with low max decal count
//r_drawbatchdecals 1 // Batch decals with decal count >18
r_spray_lifetime 2 // Keep sprays for 2 rounds
//r_spray_lifetime 0 // Clear sprays immediately
cl_playerspraydisable 0 // Enable player sprays
//cl_playerspraydisable 1 // Disable player sprays
r_decal_cullsize 20 // Optimized decal cullsize if you want to still see decals from reasonably far away.
//r_decal_cullsize 256 // Hide decals unless you are very close to them. This allows to check spread
                       // without decal rendering elsewhere.
r_decal_cover_count 1 // Remove decal when there is 1 decal in its place/close to completely covering it
//r_decal_cover_count 4 // Allow for more decals covering each other
r_decal_overlap_area 0.4 // Remove decal when there is another decal barely covering it
//r_decal_overlap_area 0.8 // Alow for decals to overlap each other more
r_decal_overlap_count 0 // Do not allow decals to overlap each other
//r_decal_overlap_count 3 // Allow for 3 decals to overlap each other
r_drawmodeldecals 0 // Disable blood decals on bodies. Will prevent new objects to be created that decals apply onto.
//r_drawmodeldecals 1 // Enable blood decals for better determining how hurt someone is.
r_renderoverlayfragment 1 // Enable overlays to see some decal based logos and posters on walls
//r_renderoverlayfragment 0 // Disable overlays, small performance increase
r_maxmodeldecal 9 // Optimize maximum model decal count
r_overlayfadeenable 0 // Fading overlays can cause small performance issues
r_overlayfademax 1000 // Optimize overlay fades if it happens to be enabled
r_overlayfademin 999 // Optimize overlay fades if it happens to be enabled

// GIBS
// Body parts created on violent deaths

cl_burninggibs 0 // Disable burning gibs to avoid the performance impact from them on
//cl_burninggibs 1 // Enable burning gibs for realism
props_break_max_pieces -1 // Break gibs and some props into the pieces they were designed to break into
//props_break_max_pieces 0 // Disables gibs and prop breaking
violence_hgibs 1 // Enable normal gibs
//violence_hgibs 0 // Enable silly gibs/blood (less performance)
violence_hblood 1 // Enable normal blood
//violence_hblood 0 // Enable silly gibs/blood (less performance)

// PROPS
// Various small objects

r_decalstaticprops 0 // Do not use some lighting data for static props, disable decals on static props
//r_decalstaticprops 1 // Use proper ambient lighting data for static props, enable decals on static props
cl_phys_props_enable 0 // Disable client side physics props
//cl_phys_props_enable 1 // Enable client side physics props
cl_phys_props_max 20 // Reduce the physics props limit to a sane one for TF2
//cl_phys_props_max 300 // Allow all physics props
cl_phys_props_respawndist 1500 // Do not spawn props if we can see them
//cl_phys_props_respawndist 3500 // Skip respawning physics props for a high distance
cl_phys_props_respawnrate 120 // Respawn physics props at a slower rate
//cl_phys_props_respawnrate 60 // Respawn physics props faster
r_propsmaxdist 900 // Maximum distance from where client side physics props are visible
//r_propsmaxdist 3000 // Always render client side physics props
r_drawdetailprops 0 // Disable detail props for saving a good bit of FPS
//r_drawdetailprops 1 // Enable sprites, grass etc
//r_drawdetailprops 2 // Draw detail props with wireframe
cl_detaildist 900 // Draw detail props up to this distance
//cl_detaildist 3000 // Always draw detail props
cl_detailfade 0 // Do not fade in detail props
//cl_detailfade 900 // Set to cl_detaildist to always be fading
//cl_detailfade 400 // Fade in detail props to reduce pop in
r_staticprop_lod -1 // Automatic LOD for props (fade between the most optimal LODs at a certain distance)
//r_staticprop_lod 0 // Force highest LOD (high quality with no fading)
//r_staticprop_lod 63 // Force lowest LOD (lowest quality)
r_PhysPropStaticLighting 1 // Use premade lighting for props, increases FPS

// RAGDOLLS
// Full bodies with adjustable physics simulation and fading on death

cl_ragdoll_collide 0 // Disable ragdoll collisions
cl_ragdoll_fade_time 0 // Remove ragdoll fade out delay
//cl_ragdoll_fade_time 15 // Fade out ragdolls in 5 seconds
cl_ragdoll_forcefade 1 // Effectively disables ragdolls by instantly fading them
//cl_ragdoll_forcefade 0 // Enable ragdolls
cl_ragdoll_physics_enable 0 // Disable ragdoll physics, where most of the performance from ragdolls comes
                            // from
//cl_ragdoll_physics_enable 1 // Enable ragdolls physics for meaningful ragdolls
g_ragdoll_fadespeed 10000 // The rate of ragdoll fading (higher is faster fading rate, so 0 will not fade and cause memleaks)
g_ragdoll_lvfadespeed 10000 // ^ but in low violence
ragdoll_sleepaftertime 0 // Instantly sleep ragdolls
//ragdoll_sleepaftertime 1 // Wait a reasonable time before sleeping ragdoll physics

// GENERAL
// General/overall graphics settings

mat_reducefillrate 0 // Increase shading quality
//mat_reducefillrate 1 // Simplify material shading and use some DX8 features
mat_bumpmap 1 // Enable bumpmaps
//mat_bumpmap 0 // Disable bumpmap materials
//mat_fastnobump 1 // Early checks for no bumpmap rendering
mat_specular 1 // Enable specular
//mat_specular 0 // Disable specular materials
//mat_fastspecular 0 // Early checks for no specular rendering
mat_viewportscale 1 // Adjust render resolution (adjust as a % from 1.0 to 0.1 in increments of 0.1 or 0.05). This is
                    // useful for if your GPU struggles to render a lot of pixels
mat_viewportupscale 1 // Upscale when using mat_viewportscale
r_3dsky 1 // Enable 3D sky
//r_3dsky 0 // Disable 3D sky
r_dopixelvisibility 1 // Do visibility testing for glows, halos and pretty lights
r_drawpixelvisibility 0 // Do not draw debug for partial visibility checking
r_pixelvisibility_partial 0 // Do not use a costly precise partial visibility algorithm
//r_pixelvisibility_partial 1 // Use partial visibility algorithm
cl_drawmonitors 0 // Do not draw monitors
cl_jiggle_bone_framerate_cutoff 67 // Disable jigglebones if we are under the optimal framerate
//cl_jiggle_bone_framerate_cutoff 0 // Always disable jigglebones
mat_picmip 1 // Use less memory in a 32-bit process
//mat_picmip 2 // Use lowest quality textures
//mat_picmip -1 // Use highest quality textures
//mat_showlowresimage 1 // Low quality images
//mat_drawflat 1 // Use flat materials only

// ROPES
// Ropes in Mannpower and as decoration in maps

rope_rendersolid 1 // Render solid part of ropes
//rope_rendersolid 0 // Skip rendering solid part of ropes
r_ropetranslucent 0 // Skip simulating ropes
//r_ropetranslucent 1 // Simulate ropes
rope_solid_minalpha 0 // Skip drawing non-solid part of ropes
rope_solid_minwidth 0.1 // Skip drawing ropes if they are not large enough on screen
//rope_solid_minalpha 0.2 // Enable solid alpha
//rope_solid_minwidth 0 // Always render non-solid ropes
rope_smooth 0 // Skip a long smoothing operation for ropes
//rope_smooth 1 // Smooth ropes with a fake transparent rope
rope_subdiv 0 // Skip heavy loops for rope subdivisions
//rope_subdiv 2 // Subdivide ropes
//rope_subdiv 7 // Max rope subdivides
rope_collide 0 // Skip CPU heavy world collisions for ropes
//rope_collide 1 // Enable rope collisions
rope_wind_dist 0 // Do not apply CPU intensive wind to ropes
//rope_wind_dist 1000 // Apply wind to ropes until this distance
rope_averagelight 1 // Only use average light, instead of an extra max intensity average with 0
//rope_averagelight 0 // Simplify rope lighting for weak GPUs, at the cost of a bit of CPU time

// OPTIMIZATION
// These settings will optimize TF2 without having any very noticeable effects to the user

fps_max 300 // Prevent a possible memory leak with unlimited FPS using fps_max 0
            // Also, some Source systems assume the FPS will not go above 300
            // Finally, using 240 is a common multiple for monitor framerates,
            // which is recommended for smoothness
engine_no_focus_sleep 0 // Do not limit FPS when the engine is not focused because
                        // the focus detection can be buggy on some systems or while
                        // streaming and may limit your FPS, without you knowing
//engine_no_focus_sleep 50 // Power savings while alt-tabbed out of TF2
r_fastzreject 1 // Renders first pass of a scene with a z-buffer on the CPU and
                // then has the GPU quickly render the scene in a second pass,
                // with the visible parts of the scene already calculated
r_entityclips 1 // Clip entities preferably using clip planes
disp_dynamic 0 // Do not use dynamic meshes for world geometry (displacements)
r_hunkalloclightmaps 0 // Allocate lightmaps in dynamic memory because some are too big for the hunk
//r_hunkalloclightmaps 1 // Allocate lightmaps in the hunk
r_frustumcullworld 1 // Cull on world draw
r_worldlistcache 1 // Cache some world rendering
mat_clipz 1 // Clips what is drawn for a performance improvement
mat_use_compressed_hdr_textures 1 // Use compressed HDR textures
r_occlusion 1 // Use CPU to have the GPU skip rendering models/props you cannot see
r_occludeemaxarea 101 // Do not skip occlusion of larger objects
r_occluderminarea 2.5 // Use occluders that take up a decent amount of pixels on larger screens
//r_occluderminarea 0.003 // Try to occlude almost everything for bad GPUs since
                        // they need the savings
r_occludermincount 2 // Force using at least 2 occluders so we occlude at least something even if they were skipped initially
r_lightcache_zbuffercache 1 // Load z cache data with the map
r_drawopaquestaticpropslast 0 // Use the newer rendering mode if possible
mat_tonemapping_occlusion_use_stencil 0 // Do not use stencil buffer for occlusion queries
//mat_tonemapping_occlusion_use_stencil 1 // Use stencil buffer for weak GPUs
host_flush_threshold 0 // Early finish to a Xbox 360 only flush task
r_norefresh 1 // Do not store a useless and unused frame time variable
fast_fogvolume 1 // Use a fast path method to find the visible fog volume
r_pixelfog 1 // Use a pixel shader for fog if possible
//r_pixelfog 0 // Do not use a higher level pixel shader for fog on weak GPUs
mat_bufferprimitives 1 // Buffer primitives
mat_compressedtextures 1 // Allow for compressed textures
mat_managedtextures 1 // Use Direct3D to manage textures, uses a bit more system memory
mat_filterlightmaps 1 // Filter lightmaps
mat_filtertextures 1 // Filter textures
mat_mipmaptextures 1 // Mipmap textures to optimize texture filtering
mat_disable_ps_patch 1 // Force disable runtime manipulation of shaders to fix MSAA on some AMD cards
//mat_disable_ps_patch 0 // Enable patching if necessary when MSAA is enabled
sv_turbophysics 1 // Disable physics interactions

// OPENGL
// Optimizations for OpenGL platforms (Linux and macOS)

gl_pow2_tempmem 1 // Makes memory allocation behavior more stable
//mat_texture_reload_frame_swap_workaround 1 // Work around texture data being unnecessarily stored on some drivers by doing frame swaps
                                             // Commented by default due to possible issues on Windows systems
//mat_texture_reload_frame_swap_workaround 0 // Skip extra frame swaps
gl_radar7954721_workaround_mixed 0 // Disable outdated cross gamma blit workaround
gl_batch_tex_creates 0 // Do not batch texture creates/destroys for more immediate OpenGL handling
gl_batch_tex_destroys 0 // ^
gl_minimize_all_tex 1 // Minimize textures by removing mipmaps if they were not requested to keep memory usage lower
gl_minimize_rt_tex 1 // ^
gl_nullqueries 1 // Skip queries
gl_mtglflush_at_tof 1 // Makes frames output smoother, at slightly less FPS
gl_debug_output 0 // Disable debug messages
gl_magnify_resolve_mode 1 // Use fastest resolve mode when up scaling too
gl_paircache_rows_lg2 11 // Increase shader pair cache size
gl_paircache_ways_lg2 5 // Keep some loops small by using minimum ways size
//gl_can_resolve_flipped 1 // Enable page flipping without checking hardware support
//gl_amd_occlusion_workaround 0 // Disable AMD occlusion workaround

// GAMEPLAY
// Adjusts how the game behaves

//cl_autoreload 1 // Auto reload clip
//cl_autorezoom 0 // Automatically rezoom sniper rifle
//tf_medigun_autoheal 1 // Keep healing allies

// CONTRACTS
// Contracts as part of campaigns

//tf_contract_competitive_show 0
//tf_contract_progress_show 0 // During all matches, contract visibility:

// NETGRAPH
// Advanced HUD display of network info and FPS

//net_graph 1
//net_graphpos 1
//net_graphproportionalfont 0

// TUTORIAL COMMANDS
// Disable tutorial messages

//cl_ask_favorite_opt_out 1
//cl_ask_blacklist_opt_out 1
//cl_ask_bigpicture_controller_opt_out 1
//cl_promotional_codes_button_show 0
//cl_training_class_unlock_all
//cl_hud_playerclass_playermodel_showed_confirm_dialog 1
//cl_showhelp 0
//replay_quitmsg_dontaskagain 1
//sb_dontshow_maxplayer_warning 1
//tf_explanations_store 1
//tf_explanations_discardpanel 1
//tf_explanations_backpackpanel 1
//tf_explanations_charinfopanel 1
//tf_explanations_craftingpanel 1
//tf_explanations_charinfo_armory_panel 1
//tf_training_has_prompted_for_forums 1
//tf_training_has_prompted_for_loadout 1
//tf_training_has_prompted_for_options 1
//tf_training_has_prompted_for_training 1
//tf_training_has_prompted_for_offline_practice 1
//tf_taunt_always_show_hint 0
//tf_coach_request_nevershowagain 1
//tf_show_maps_details_explanation_count 0
//tf_show_taunt_explanation_in_class_loadout 0
//tf_show_preset_explanation_in_class_loadout 0
//tf_find_a_match_hint_viewed 1
//tf_quest_map_intro_viewed 1
//tf_warpaint_explanation_viewed 1
//tf_inspect_hint_count 11
//tf_mvm_tabs_discovered 1
//tf_hud_notification_show_count_ghost_controls 1
//tf_hud_notification_show_count_ghost_controls_no_respawn 1
//tf_hud_notification_show_count_kart_controls 1

// CONSOLE
// Developer console customization

con_nprint_bgalpha 100 // Console translucency (0 to 255)
//con_nprint_bgalpha 255 // Disable transparency for lowend computers
con_nprint_bgborder 1 // Console border
//con_nprint_bgborder 0 // Disable border on lowend computers

// VIEW OPTIONS
// All my personal view based tweaks - disabled by default

//fov_desired 90 // See more of the battlefield
//viewmodel_fov 90 // FOV for your viewmodel, recommend to adjust from 54 to 70
//tf_use_min_viewmodels 1 // Move viewmodel to cover less of the screen
//tf_medieval_thirdperson 1
//glow_outline_effect_enable 0
//tf_enable_glows_after_respawn 0
//tf_spec_xray_disable 1


// Memory
// Adjustments to memory allocation, DO NOT USE HEAPSIZE IN LAUNCH OPTIONS WITH THESE ENABLED

//datacachesize 512 // Increase data cache size only on systems with 8GB of RAM or more
mem_max_heapsize_dedicated 128 // Increase memory cap on 512MB systems
lzma_persistent_buffer 1 // Keep the LZMA compression system in memory to prevent reloads of it
cl_always_flush_models 0 // Keep models loaded in between map loads and prevent crashes from model flushing
//cl_always_flush_models 1 // Remove models from memory every map load to keep memory usage low
mat_levelflush 1 // Clear temporary memory to prevent overloading memory stores
sv_forcepreload 0 // Disable harmful force preload enabled in other configs

// FILESYSTEM PARAMETERS
// Safe to leave on or off, TF2 handles this almost perfectly anyway

filesystem_native 1
filesystem_unbuffered_io 1
filesystem_buffer_size 262144
filesystem_max_stdio_read 64

// MODEL CACHE
// Control loading and caching models

mod_load_anims_async 1 // Enable async animation loading
//mod_load_anims_async 0 // Disable async animation loading
mod_load_mesh_async 1 // Enable async mesh loading
//mod_load_mesh_async 0 // Disable async mesh loading
mod_load_vcollide_async 1 // Enable async vcollide loading
//mod_load_vcollide_async 0 // Disable async vcollide loading


// STORAGE OPTIMIZATIONS
// For HDDs

mod_touchalldata 1 // Load submodels 
mod_forcetouchdata 1 // Put submodels into cache
mod_forcedata 1 // Cache submodel data

// For SSDs

//mod_touchalldata 0 // Do not load submodels
//mod_forcetouchdata 0 // Do not put submodels into cache
//mod_forcedata 0 // Do not cache submodel data

// SOUND

dsp_enhance_stereo 0
dsp_slow_cpu 1
snd_async_fullyasync 1 // Having the sound run fully asynchronous has been
                       // helpful in the past, as it seems to (for whatever
                       // reason) reduce the number of TDRs experienced during
                       // gameplay. There's some pretty good information on
                       // TDRs (nerds only) here:
                       // http://forums.nvidia.com/index.php?showtopic=65161
snd_pitchquality 0
snd_spatialize_roundrobin 1
snd_mixahead .06 // Delay in sound from weapons below .05 has been known to be unstable

// OPTIMIZATIONS - pulled from Mastercomfig - all credits to him, these were tested and I found that these do help
// Optimizations with no noticeable effect on the listener

snd_lockpartial 1 // Use interleaved, partial locking sound algorithm
//snd_lockpartial 0 // Use the base, fully locking sound algorithm
snd_cull_duplicates 0 // Do not skip playing duplicate sounds
//snd_cull_duplicates 1 // Only play one of each sound at a time
voice_steal 2 // Reuse unimportant sound channels, increases FPS and sound quality
voice_buffer_ms 100 // Buffer voice stream for better quality, at a slight delay
snd_noextraupdate 1 // Do not update sound twice
snd_defer_trace 1 // Defer DSP spatialization with tracing to the next frame
//snd_defer_trace 0 // Immediately trace on the first frame
phonemefilter 0.01 // Do not box filter phonemes
//phonemefilter 0.1 // Box filter phonemes for slightly longer
phonemesnap 0 // Do not crossfade a second phoneme on any LOD
//phonemesnap 63 // Crossfade a second phoneme on every LOD

// MOUSE
// Mouse movement and aiming

sensitivity 3 // Mouse sensitivity
m_filter 0 // Do not average mouse input over two frames, more responsive mouse input
m_mousespeed 0 // Disable Windows mouse acceleration (-noforcemspd)
m_rawinput 1 // Use raw input from mouse
zoom_sensitivity_ratio 0.7934714 // Use same sensitivity as when unscoped

clear
echo "Core's Config loaded."

mem_compact // Save some memory on startup
